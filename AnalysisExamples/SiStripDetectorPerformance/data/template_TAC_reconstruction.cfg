process TRACKRECONSTRUCTION = {

  #service = Timing{}
    
  ######## MessageLogger ########
  service = MessageLogger {
    untracked vstring suppressInfo = {"siStripClusters","siStripClusters325"}

    untracked vstring destinations = {
      "cout", "cerr"
    }
    untracked vstring categories = {
      "FwkJob",
      "FwkReport",
      "Root_NoDictionary"
    }
    untracked PSet cout = {
      untracked string threshold = "INFO"
      untracked PSet default = {
        untracked int32 limit       = 1000000000
        untracked int32 reportEvery = 1
      }
      untracked PSet FwkJob = {
        untracked int32 limit       = 1000000000
        untracked int32 reportEvery = 1000
      }
      untracked PSet FwkReport = {
        untracked int32 limit       = 1000000000
        untracked int32 reportEvery = 1000
      }
    }
    untracked PSet cerr = { untracked string threshold = "ERROR" }
  }  

  
  ############ File Input ############
  source = PoolSource {
    untracked vstring fileNames =  {
      "file:INPUT_FILE.root"
    }

    untracked int32 maxEvents = 50
    untracked uint32 debugVebosity = 1
    untracked bool   debugFlag     = true
  }


  ############ General Tracking ############
  include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"
  include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"
  
  #initialize magnetic field
  include "MagneticField/Engine/data/uniformMagneticField.cfi"
  replace UniformMagneticFieldESProducer.ZFieldInTesla = 0.0
  es_prefer = UniformMagneticFieldESProducer{}

  #initialize geometry
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
  include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
  include "RecoTracker/GeometryESProducer/data/TrackerRecoGeometryESProducer.cfi"
  #stripCPE
  include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
  #pixelCPE
  include "RecoLocalTracker/SiPixelRecHits/data/PixelCPEParmError.cfi"
  #TransientTrackingBuilder
  include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilder.cfi"
  #MeasurementTracker
  include "RecoTracker/MeasurementDet/data/MeasurementTrackerESProducer.cfi"
  replace MeasurementTrackerESProducer.pixelClusterProducer = ""
  include "RecoTracker/CkfPattern/data/CkfTrajectoryBuilderESProducer.cfi"


  ############### Cosmic Track Finder ###########################
  module cosmicseedfinder= CosmicSeedGenerator{
    InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
    InputTag rphirecHits    = siStripMatchedRecHits:rphiRecHit
    InputTag stereorecHits  = siStripMatchedRecHits:stereoRecHit
    double ptMin=0.9
    double originRadius=150
    double originHalfLength=90
    double originZPosition=0
    string TTRHBuilder        =  "WithTrackAngle"	
    untracked string GeometricStructure  = "STANDARD" //other choice: TIBD+
  }

  module cosmictrackfinder= CosmicTrackFinder{
    bool TrajInEvents=true
    InputTag cosmicSeeds = cosmicseedfinder:
    InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
    InputTag rphirecHits    = siStripMatchedRecHits:rphiRecHit
    InputTag stereorecHits  = siStripMatchedRecHits:stereoRecHit
    string HitProducer        = "siStripRecHits"
    int32 MinHits=4
    double Chi2Cut=100.
    string TTRHBuilder    =   "WithTrackAngle"
    untracked string GeometricStructure  = "MTCC"
  }


  ############### Road Search ##############################
  #KFUpdatoerESProducer
  include "TrackingTools/KalmanUpdators/data/KFUpdatorESProducer.cfi"
  #PropagatorWithMaterialESProducer
  include "TrackingTools/MaterialEffects/data/MaterialPropagator.cfi"
  #PropagatorWithMaterialESProducer
  include "TrackingTools/MaterialEffects/data/OppositeMaterialPropagator.cfi"

  es_source = RoadMapESSource {
    untracked int32 VerbosityLevel = 1
    FileInPath InputFileName="RecoTracker/RoadMapESSource/data/roads-tac_tob.dat"
  }

  #RoadSearchSeedFinder
  module roadSearchSeeds = RoadSearchSeedFinder {
    
    # strip rechit collections
    InputTag matchedStripRecHits = siStripMatchedRecHits:matchedRecHit
    InputTag rphiStripRecHits    = siStripMatchedRecHits:rphiRecHit
    InputTag stereoStripRecHits  = siStripMatchedRecHits:stereoRecHit

    # module label of SiPixelRecHitConverter
    InputTag pixelRecHits        = siPixelRecHits

    # minimal transverse momentum fro seeded track reconstruction
    double MinimalReconstructedTransverseMomentum = 1.5
  
    # need true to reco field off cosmics
    bool StraightLineNoBeamSpotSeed = true
  }  
  
  module rawRoadSearchClouds = RoadSearchCloudMaker {
    # module label of RoadSearchSeedFinder
    string SeedProducer = "roadSearchSeeds"
  
    # strip rechit collections
    InputTag matchedStripRecHits = siStripMatchedRecHits:matchedRecHit
    InputTag rphiStripRecHits    = siStripMatchedRecHits:rphiRecHit
    InputTag stereoStripRecHits  = siStripMatchedRecHits:stereoRecHit

    # module label of SiPixelRecHitConverter
    InputTag pixelRecHits        = siPixelRecHits

    # Use Pixels or not
    bool UsePixelsinRS = no

    # Use rphi RecHits in addition to matched RecHits (double modules only)
    bool UseRphiRecHits = true

    # Use stereo RecHits in addition to matched RecHits (double modules only)
    bool UseStereoRecHits = true

    # Scale factor which determines size of windows to find road seeds
    double scalefactorRoadSeedWindow = 15

    # minimum half road parameter
    #  double MinimumHalfRoad = 0.13
    double MinimumHalfRoad = 0.50
  
    # maximal number of RecHits per DetId in RoadSearchCloud
    int32 MaxDetHitsInCloudPerDetId = 32

    # Size of R-Phi Road in Phi
    #double RPhiRoadSize = 0.0001
    double RPhiRoadSize = 0.025
    #double RPhiRoadSize = 0.0025

    # Size of Z-Phi Road in Phi
    double ZPhiRoadSize = 0.0020

    # minimal number of user layers per road (default: 6)
    int32 MinimalNumberOfUsedLayersPerRoad = 3 

    # minimal number of missed layers per road
    int32 MaximalNumberOfMissedLayersPerRoad = 3 

    # maximal number of consecutive missed layers per road
    int32 MaximalNumberOfConsecutiveMissedLayersPerRoad = 2

    # need true to reco field off cosmics
    bool StraightLineNoBeamSpotCloud = true 
 
    # do cloud cleaning in CloudMaker instead of separate module
    bool DoCloudCleaning = true
 
    # minimal fraction of hits which has to lap between RawRoadSearchClouds to be merged
    double MergingFraction = 0.80 #was: 0.50 ,0.80
 
    # maximal number of RecHits per RoadSearchCloud
    int32 MaxRecHitsInCloud = 100
  }


  module rsTrackCandidates = RoadSearchTrackCandidateMaker {
    string CleanCloudProducer = "rawRoadSearchClouds"
    string TTRHBuilder        =  "WithTrackAngle"
    double HitChi2Cut = 1000.0
    int32  NumHitCut  = 4
    bool StraightLineNoBeamSpotCloud = true
    int32 MinimumChunkLength         = 0
    int32 nFoundMin                  = 2
  }

  # final track fit with material 
  module rsWithMaterialTracks = TrackProducer {
    string Fitter = "KFFittingSmoother"
    string Propagator = "PropagatorWithMaterial"
    string src = "rsTrackCandidates"
    string producer = ""
    string TTRHBuilder          =  "WithTrackAngle"
    bool TrajectoryInEvent = false
  }


  ################# Combinatorial Track Finder ####################
  module combinatorialcosmicseedfinder= CombinatorialSeedGeneratorForCosmics{
    InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
    InputTag rphirecHits    = siStripMatchedRecHits:rphiRecHit
    InputTag stereorecHits  = siStripMatchedRecHits:stereoRecHit 
    double SeedMomentum = 0.2   #initial momentum in GeV 	
    untracked string GeometricStructure  = "CkfTIF3"  //other options: Standard,CkfTIBD+
    string Matcher = "StandardMatcher"	
  }

  include "RecoTracker/CkfPattern/data/CkfTrackCandidates.cff"
  #replace MeasurementTrackerESProducer.pixelClusterProducer = ""
  replace ckfTrackCandidates.TrajectoryBuilder    = "GroupedCkfTrajectoryBuilder"
  replace ckfTrackCandidates.SeedProducer         = "combinatorialcosmicseedfinder"
  replace GroupedCkfTrajectoryBuilder.ptCut               = 0.01
  replace GroupedCkfTrajectoryBuilder.maxLostHit          = 3
  replace GroupedCkfTrajectoryBuilder.maxConsecLostHit    = 1
  replace GroupedCkfTrajectoryBuilder.minimumNumberOfHits = 3

  #final fit
  module ctfWithMaterialTracks = TrackProducer {
    string Fitter = "KFFittingSmoother"
    string Propagator = "PropagatorWithMaterial"
    string src = "ckfTrackCandidates"
    string producer = ""
    string TTRHBuilder       =   "WithTrackAngle"
    bool TrajectoryInEvent = true
  }

  #track info
  include "AnalysisAlgos/TrackInfoProducer/data/TrackInfoProducer.cfi"	


  ############# track reconstruction sequence and output  #############
  module out = PoolOutputModule {
    untracked string fileName = "OUTPUT_FILE.root"
  }

  sequence local_reco = {siStripMatchedRecHits}
  sequence cosmic_track_finder = {cosmicseedfinder,cosmictrackfinder}
  sequence road_search = {roadSearchSeeds,rawRoadSearchClouds,rsTrackCandidates,rsWithMaterialTracks}
  sequence cominatorial_track_finder = {combinatorialcosmicseedfinder,ckfTrackCandidates,ctfWithMaterialTracks,trackinfo}
  
  path p = {local_reco,cosmic_track_finder,road_search,cominatorial_track_finder}

  endpath e = {out}

}
