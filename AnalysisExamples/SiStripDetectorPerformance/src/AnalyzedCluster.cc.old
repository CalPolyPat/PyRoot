#ifndef AnalysisExamples_SiStripDetectorPerformance_AnalyzedCluster_h
#define AnalysisExamples_SiStripDetectorPerformance_AnalyzedCluster_h

struct AnalyzedCluster {

  int run;
  int event;
  int size;
  int module;
  int string;
  int rod;
  int extint;
  int bwfw;
  int wheel;
  int type;
  int layer;
  int sign;
  int charge;
  int hitspertrack;

  float clusterpos;
  float clustereta;
  float clusterchg;
  float clusterchgl;
  float clusterchgr;
  float clusternoise;
  float clustermaxchg;
  float clusterbarycenter;
  float clusterseednoise;
  float clustercrosstalk;

  float angle;
  float tk_phi;
  float tk_theta;
  int tk_id;
  bool shared;
  float stereocorrection;
  float localmagfield;
  int monostereo;
  float momentum, pt;
  float eta;
  float phi;
  float normchi2;
  float chi2;
  float ndof;
  bool bTrack;
//   bool bTriggerDT;
//   bool bTriggerCSC;
//   bool bTriggerRBC1;
//   bool bTriggerRBC2;
//   bool bTriggerRPC;
  float dLclX;
  float dLclY;
  float dLclZ;
  float dGlbX;
  float dGlbY;
  float dGlbZ;

  // For tracks number
  int numberoftracks;
  int numberofclusters;
  int numberoftkclusters;
  int numberofnontkclusters;
  // -----------------

  int eventcounter, trackcounter, hitcounter;

  AnalyzedCluster() {
  run = -99;
  event = -99;
  size = -99;
  module = -99;
  string = -99;
  rod = -99;
  extint = -99;
  bwfw = -99;
  wheel = -99;
  type = -99;
  layer = -99;
  sign = -99;
  charge = -99;
  hitspertrack = -99;

  clusterpos = -99;
  clustereta = -99;
  clusterchg = -99;
  clusterchgl = -99;
  clusterchgr = -99;
  clusternoise = -99;
  clustermaxchg = -99;
  clusterbarycenter = -99;
  clusterseednoise = -99;
  clustercrosstalk = -99;

  angle = -9999;
  tk_phi = -99;
  tk_theta = -99;
  tk_id = 0;
  shared = false;
  stereocorrection = -9999;
  localmagfield = -99;
  monostereo = -99;
  momentum = -99;
  pt = 99;
  eta = -99;
  phi = -99;
  normchi2 = -99;
  chi2 = -99;
  ndof = -99;
  bTrack = false;
//   bool bTriggerDT;
//   bool bTriggerCSC;
//   bool bTriggerRBC1;
//   bool bTriggerRBC2;
//   bool bTriggerRPC;
  dLclX = -99;
  dLclY = -99;
  dLclZ = -99;
  dGlbX = -99;
  dGlbY = -99;
  dGlbZ = -99;

  // For tracks number
  numberoftracks = -99;
  numberofclusters = -99;
  numberoftkclusters = -99;
  numberofnontkclusters = -99;
  // -----------------

  eventcounter = 0;
  trackcounter = 0;
  hitcounter = 0;
  }

}

#endif
