process L1TrigPixelAna = {

  service = MessageLogger {
    untracked vstring destinations = { 
      "debug.txt",
      "errors.txt"
    }
    untracked PSet debug.txt = { untracked string threshold = "DEBUG"    } 
    untracked PSet cout = { untracked string threshold = "ERROR"    } 
    untracked vstring debugModules =  { "read" }
  }

  # The number of events to be processed.
  untracked PSet maxEvents = {untracked int32 input = -1}

//  source = PoolSource {
//    untracked vstring fileNames = {
//      "file:/data/demattia/LocalTest/Fast_ttH_120_puhl_local_3.root"
//     "castor:/castor/cern.ch/user/d/demattia/TTH/FastSim/TT_4JETS/Fast_tt_4jets_puhl_crab_1_1.root"
//    }
//  }

  include "AnalysisExamples/L1PixelAnalyzer/test/ttH_120.cff"

  ############################################################################
  # Needed to loop on subdets and distinguish pixel-barrel and pixel-endcaps #
  ############################################################################
  # tracker geometry
  include "Geometry/TrackerRecoData/data/trackerRecoGeometryXML.cfi"
  # tracker geometry
  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
  # tracker numbering
  include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

  ############################
  # Offline jets corrections #
  ############################

  // setup the sequences for the Jet and MET corrections
//  include "JetMETCorrections/Modules/data/JetMETCorrections.cff"

  # Declare the possible kinds of corJets: possible collections of corrected calojets and
  # also the correction services that allows user to correct jets on the fly.
  # Here we use the 1_5_2 (also compatible with at least 1_6_0) jet corrections.
  include "JetMETCorrections/MCJet/data/MCJetCorrections152.cff"

  # Pick MCJetCorrectionService to set record's IOV
  es_prefer MCJetCorrectorIcone5 = MCJetCorrectionService {}

  #######################
  # L1TrigPixelAnalyzer #
  #######################

  include "AnalysisExamples/L1PixelAnalyzer/data/L1TrigPixelAnalyzer.cfi"
  replace L1TrigPixelAna.OutputName = "L1TrigPixelAna.root"

  // module list
  path L1TrigPixelAnalysis = {
    L1TrigPixelAna
  }

  #################
  # Output module #
  #################

  // Attention: if both the output module and the analyzer are used
  // the same things will end in both output module file and analyzer
  // private root file.

//  module outputL1GlobalTrigger = PoolOutputModule { 
//    untracked vstring outputCommands = {
//      "keep *"
//    }
//    untracked string fileName = "L1GlobalTrigger_ttH_120.root" 
//  }
    
//  endpath outpath = { MCJetCorrections,GammaJetCorrections,JetPlusTrackCorrections,TauJetCorrections, outputL1GlobalTrigger }
//  endpath outpath = { outputL1GlobalTrigger }

}
