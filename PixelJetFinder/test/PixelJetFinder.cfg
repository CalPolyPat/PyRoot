process PIXELJETFINDER = {

  service = MessageLogger {
    untracked vstring destinations = { 
      "debug.txt",
      "errors.txt"
    }
    untracked PSet debug.txt = { untracked string threshold = "DEBUG"    } 
    untracked PSet cout = { untracked string threshold = "DEBUG"    } 
    untracked vstring debugModules =  { "read" }
  }

  # The number of events to be processed.
  untracked PSet maxEvents = {untracked int32 input = -1}

  source = PoolSource {
    untracked vstring fileNames = {
      "castor:/castor/cern.ch/user/d/demattia/FastSim/test.root"
    }
  }

  ############################################################################
  # Needed to loop on subdets and distinguish pixel-barrel and pixel-endcaps #
  ############################################################################
  # tracker geometry
  include "Geometry/TrackerRecoData/data/trackerRecoGeometryXML.cfi"
  # tracker geometry
  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
  # tracker numbering
  include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

  include "AnalysisExamples/PixelJetFinder/data/PixelJetProducer.cfi"

  module o1 = PoolOutputModule { 
    untracked string fileName = "PixelJet_test.root" 
    untracked vstring outputCommands = {
//      "drop *",
//      "keep *_pixelTracks_*_*",
//      "keep *_PixelJetFinder_*_*"
      "keep *"
    }
  }

  path L1PixelAnalysis = {
    PixelJetFinder,
    o1
  }

}
