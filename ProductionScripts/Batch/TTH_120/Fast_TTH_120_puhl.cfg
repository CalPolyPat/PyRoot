process PROD  = 
{

  # The number of events to be processed.
  untracked PSet maxEvents = {untracked int32 input = 2000}
    
  service =  RandomNumberGeneratorService {
    # This is to initialize the random engine of the source
    untracked uint32 sourceSeed = AAAAAAAA
    # This is to initialize the random engines of Famos
    PSet moduleSeeds =
    {
      untracked uint32 VtxSmeared = BBBBBBBB
      untracked uint32 famosPileUp = LLLLLLLL
      untracked uint32 famosSimHits = CCCCCCCC
      untracked uint32 siTrackerGaussianSmearingRecHits = DDDDDDDD
      untracked uint32 caloRecHits = EEEEEEEE
      untracked uint32 paramMuons = FFFFFFFF
      untracked uint32 siPixelDigis = GGGGGGGG
      untracked uint32 siStripDigis = HHHHHHHH
    }
  }

  # Generating TTH with Higgs mass = 120 GeV
  include "FastSimulation/Configuration/data/ttH_120.cfi"

  # Famos sequences
  include "FastSimulation/Configuration/data/CommonInputs.cff"
  include "FastSimulation/Configuration/data/FamosSequences.cff"
  // Parametrized magnetic field
  replace VolumeBasedMagneticFieldESProducer.useParametrizedTrackerField = true
  // You may not want to simulate everything for your study
  replace famosSimHits.SimulateCalorimetry = true
  replace famosSimHits.SimulateTracking = true
  # replace famosSimHits.SimulateMuons = false

  // Select the luminosity: 5 = Low; 25 = High
  replace famosPileUp.PileUpSimulator.averageNumber = 25.0

  es_source src2 = EcalTrivialConditionRetriever
  {
    untracked bool producedEcalWeights = true
    untracked bool producedEcalPedestals = false
    untracked bool producedEcalIntercalibConstants = true
    untracked bool producedEcalGainRatios = false
    untracked bool producedEcalADCToGeVConstant = false
    untracked bool weightsForTB = false
    #       If set true reading optimized weights (3+5 weights) from file
    untracked bool getWeightsFromFile = true
  }

  replace ecalConditions.toGet = {
    { string record = "EcalPedestalsRcd"
      string tag = "EcalPedestals_trivial" },
    { string record = "EcalADCToGeVConstantRcd"
      string tag = "EcalADCToGeVConstant_trivial" },
    { string record = "EcalGainRatiosRcd"
      string tag = "EcalGainRatios_trivial" }
  }

  #/---------------------
  # Digis full simulation

  include "SimTracker/SiPixelDigitizer/data/PixelDigi.cfi"
  include "SimTracker/SiStripDigitizer/data/SiStripDigi.cfi"

  # Uncomment both for FastSim
  replace siPixelDigis.ROUList = { "TrackerHits" }
  replace siStripDigis.ROUList = { "TrackerHits" }

  #      replace siStripDigis.NoNoise = true # Big Speedup
  #---------------------/

  // Pixel tracks (full reco)
  #Tracker geometry
  #  include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
  #  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
  #  include "RecoTracker/GeometryESProducer/data/TrackerRecoGeometryESProducer.cfi"
  include "RecoLocalTracker/SiPixelClusterizer/data/SiPixelClusterizer.cfi"
  include "RecoLocalTracker/SiPixelRecHits/data/SiPixelRecHits.cfi"
  include "RecoPixelVertexing/PixelTrackFitting/data/PixelTracks.cff"

  // PixelJets Producer
  include "AnalysisExamples/PixelJetFinder/data/PixelJetProducer.cfi"


  service = Timing { }
  #    service = SimpleProfiling { }

  // Do digis for fastsim calorimetry
  replace caloRecHits.RecHitsFactory.doDigis=true

  // For missing services
  include "CalibCalorimetry/Configuration/data/Hcal_FakeConditions.cff"
#  include "RecoBTag/TrackProbability/data/trackProbabilityFakeCondFile.cfi"
  include "CalibTracker/SiPixelESProducers/data/SiPixelFakeGainESSource.cfi"
  include "RecoVertex/BeamSpotProducer/data/BeamSpotSimpleGaussian.cff"
#  es_source = PoolDBESSource {
#    VPSet toGet = {
#      {
#        string record = "BeamSpotObjectsRcd"
#        string tag = "SimpleGaussian"
#      }
#    }
#    string connect =  "frontier://CoralDev/CMS_COND_BEAMSPOT"
#    string timetype = "runtime"
#    PSet DBParameters = {
#      untracked int32 messageLevel=0
#    }
#  }

  sequence famosWithL1AfterfamosAll = {
#    famosWithCaloTowers&
    ecalTriggerPrimitiveDigis&
    hcalTriggerPrimitiveDigis&
    fastL1CaloSim&
    fastL1extraParticleMap
  }

  # Add the beam spot
  include "RecoVertex/BeamSpotProducer/data/BeamSpot.cff"

  sequence famosAll = {
    offlineBeamSpot,
    famosWithTracksAndJets,
// expands in
//   famosWithTracksAndCaloTowers,
//   caloJetMetGen,
//   caloJetMet
// use only iterative cone 5 jets
//    iterativeCone5CaloJets,
    paramMuons,
    vertexreco,
    ic5JetTracksAssociatorAtVertex,
    famosBTaggingSequence
  }

  // IC5 jets and MET correction

  ############################
  # Offline jets corrections #
  ############################

  // setup the sequences for the Jet and MET corrections
  //  include "JetMETCorrections/Modules/data/JetMETCorrections.cff"

  # Declare the possible kinds of corJets: possible collections of corrected calojets and
  # also the correction services that allows user to correct jets on the fly.
  # Here we use the 1_5_2 (also compatible with at least 1_6_0) jet corrections.
  include "JetMETCorrections/Configuration/data/MCJetCorrections152.cff"

  # Pick MCJetCorrectionService to set record's IOV
  es_prefer MCJetCorrectorIcone5 = MCJetCorrectionService {}

  ######################
  # caloMET Correction #
  ######################

  // Type 1 MET corrections based on MCJet corrections
  include "JetMETCorrections/Type1MET/data/MetType1Corrections.cff"

  ##################
  # Muon Isolation #
  ##################
  // Already included in FamosSequences
  //  include "RecoMuon/MuonIsolationProducers/data/muIsolation.cff"

  #############
  # Electrons #
  #############

  // sequence to make pixel-based electrons
  // Taken from CMSSW/ RecoEgamma/ EgammaElectronProducers/ data/ electronSequence.cff in 1_7_0pre10.
  // Considered as standard reconstruction in the Workbook.
  // Already included in FamosSequences.cff
  # include "RecoEgamma/EgammaElectronProducers/data/pixelMatchGsfElectronSequence.cff"

  // Electron isolation
  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaElectronTkIsolation.cfi"
  replace egammaElectronTkIsolation.trackProducer = gsWithMaterialTracks
  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaElectronTkNumIsolation.cfi"
  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaElectronTkRelIsolation.cfi"
  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaPhotonTkIsolation.cfi"
  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaPhotonTkNumIsolation.cfi"
  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaPhotonTkRelIsolation.cfi"
  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaHcalIsolation.cfi"
  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaHOE.cfi"
  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaTowerIsolation.cfi"
  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaHOETower.cfi"

  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaEcalIsolationSequence.cff"
  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaEcalRelIsolationSequence.cff"

  sequence egammaIsolationSequence = {
#    egammaHcalIsolation&     # needs reco quantities, uncomment if available
#    egammaHOE&               # needs reco quantities, uncomment if available
// //    egammaTowerIsolation&
    egammaTowerIsolation
//    egammaHOETower&
//    egammaElectronTkIsolation&
//    egammaElectronTkRelIsolation&
//    egammaElectronTkNumIsolation&
//    egammaPhotonTkIsolation&
//    egammaPhotonTkRelIsolation&
//    egammaPhotonTkNumIsolation&
//    egammaEcalRelIsolationSequence&
//    egammaEcalIsolationSequence
  }

// Tau tag invariant mass
  module invariantMass = InvariantMass
  {
    string JetTrackSrc = "coneIsolationTauJetTags"
    double MatchingCone = 0.1
    double IsolationCone = 0.4
    double SignalCone = 0.07
    double LeadingTrackPt = 6.
    double MinimumTrackPt = 1.
    double ClusterSelectionCone = 0.4
    double ClusterTrackMatchingCone = 0.08
    double InvariantMassCutoff = 100.0
    string ecalbcl    = "islandBasicClusters"
    include "TrackingTools/TrackAssociator/data/default.cfi"
  }


  path p1 = { 
    # VtxSmeared, # No need to use it! (internal vertex smearing exists in FAMOS)
    #   famosWithTracksAndEcalClusters
    famosAll,
    famosWithL1AfterfamosAll
    # Digis
    , siPixelDigis,
    # siStripDigis,
    # PixelTracks
    siPixelClusters, siPixelRecHits, pixelTracks,
    PixelJetFinder,
    corMetType1Icone5,
    muIsolation_ParamGlobalMuons,
    // Add electrons and taus
    ecalClusteringSequence,
    famosElectronSequence,
    egammaIsolationSequence,
    famosTauTaggingSequence,
//    invariantMass,
    offlineProd
  }

  // L1TrigPixelAnalyzer part

  #######################
  # L1PixelAnalyzer #
  #######################

//  include "AnalysisExamples/L1PixelAnalyzer/data/L1PixelAnalyzer.cfi"
//  replace L1PixelAna.OutputName = "L1PixelAna_TTH_120.root"

  #######################
  # L1TrigPixelAnalyzer #
  #######################

//  include "AnalysisExamples/L1PixelAnalyzer/data/L1TrigPixelAnalyzer.cfi"
//  replace L1TrigPixelAna.OutputName = "L1TrigPixelAna_TTH_120_tk3.root"
//  replace L1TrigPixelAna.TracksMinimumNum_in_PixelJet = 3
//  replace L1TrigPixelAna.OutputEffFileName = "Efficiency_TTH_120_tk3.txt"

  ###################
  # OfflineProducer #
  ###################

  include "AnalysisExamples/L1PixelAnalyzer/data/OfflineProducer.cfi"
  // Making_TTH_120
  replace offlineProd.EventType = 6



  // module list
//  endpath L1TrigPixelAnalysis = {
//    corMetType1Icone5,
//    L1PixelAna,
//    L1TrigPixelAna
//  }


  module o1 = PoolOutputModule { 
    untracked string fileName = "TTH_120_INDEX.root" 
    untracked vstring outputCommands = {
//      "keep *"
//      ,"drop *_mix_*_*"
      "drop *",
//      "keep edmHepMCProduct_source_*_*",
//      "keep l1extraL1EmParticles_*_*_*",
//      "keep *_iterativeCone5CaloJets_*_*",
//      "keep recoCaloMETs_met_*_*",
//      "keep recoGenJets_iterativeCone5GenJets_*_*_*",
//      "keep recoGenMETs_genMet_*_*_*",
//      "keep recoJetTags_trackCountingHighEffJetTags_*_*",
//      "keep recoJetTags_trackCountingHighPurJetTags_*_*",
//      "keep *_jetTracksAssociator_*_*"
//      "keep recoMuons_*_ParamGlobalMuons_*"
//      "keep recoVertexs_*_*_*"
//      "keep PixelJets_*_*_*"
      "keep *_offlineProd_*_*",
      "keep recoTracks_gsWithMaterialTracks_*_*",
      "keep *_combinedSVBJetTags_*_*",
      "keep *_offlinePrimaryVerticesFromCTFTracks_*_*"
//      "keep *_iterativeCone5GenJets_*_*"
    }
  }
  endpath outpath = { o1 }
//  endpath outpath = { o1 }

    
  # Keep the logging output to a nice level #
#  service = MessageLogger {
#    untracked vstring destinations = { 
#      "debug_INDEX.txt",
#      "errors_INDEX.txt"
#    }
#    untracked PSet debug.txt = { untracked string threshold = "DEBUG"    } 
#    untracked PSet cout = { untracked string threshold = "DEBUG"    } 
#    untracked vstring debugModules =  { "read" }
#  } 
}
