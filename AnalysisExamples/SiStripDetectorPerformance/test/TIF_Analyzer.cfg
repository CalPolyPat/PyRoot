 process TIFAnalyzer = {

  service = MessageLogger {
    untracked vstring destinations = { 
      "debug.txt",
      "errors.txt"
    }
    untracked PSet debug.txt = { untracked string threshold = "DEBUG"    } 
    untracked PSet cout = { untracked string threshold = "DEBUG"    } 
    untracked vstring debugModules =  { "read" }
  }

  source = PoolSource { 
    untracked vstring fileNames = {
      'castor:/castor/cern.ch/cms/testbeam/TAC/TIB/processed/reco_cluster_Run540_ZS.root'
###here the clusters need to be redone
    }
    # untracked uint32 skipEvents = 0
    untracked int32 maxEvents = 100
  }

  # initialize magnetic field
  include "MagneticField/Engine/data/uniformMagneticField.cfi"  
  es_prefer = UniformMagneticFieldESProducer{}

### tracker geometry
###  include "Geometry/TrackerRecoData/data/trackerRecoGeometryXML.cfi"
  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
  include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
###  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi" 
  include "RecoTracker/GeometryESProducer/data/TrackerRecoGeometryESProducer.cfi"

# read cabling and pedestals from DB
    es_source = PoolDBESSource { 
	
 	VPSet toGet = {{ string record = "SiStripPedestalsRcd" string tag = "SiStripPedNoise_TIBD_v1_p" }, 
			{ string record = "SiStripNoisesRcd" string tag = "SiStripPedNoise_TIBD_v1_n" }, 
			{ string record = "SiStripFedCablingRcd" string tag = "SiStripCabling_TIBD_v1" }}	
	bool loadAll = true

#WithFrontier  #untracked bool siteLocalConfig = true 
// Orcon
##	string connect = "oracle://orcon/CMS_COND_STRIP"
##	untracked string catalog = "relationalcatalog_oracle://orcon/CMS_COND_GENERAL" 
// Orcoff
        string connect = "oracle://cms_orcoff_int2r/CMS_COND_STRIP"
        untracked string catalog = "relationalcatalog_oracle://cms_orcoff_int2r/CMS_COND_GENERAL"
// Devdb10
##	string connect = "oracle://devdb10/CMS_COND_STRIP"
##	untracked string catalog = "relationalcatalog_oracle://devdb10/CMS_COND_GENERAL" 

	string timetype = "runnumber" 

#	untracked uint32 messagelevel = 0
        PSet DBParameters = {
	  untracked int32 messageLevel=0
          // Zhen patch
	  untracked bool loadBlobStreamer = true
	}

	untracked bool loadBlobStreamer = true
	untracked uint32 authenticationMethod = 1
    }
               
    # produce SiStripFecCabling and SiStripDetCabling out of SiStripFedCabling
    es_module sistripconn = SiStripConnectivity {}

    # SiStripRaw2digi
    include "EventFilter/SiStripRawToDigi/data/SiStripDigis.cfi"
    #include "EventFilter/SiStripRawToDigi/data/FedChannelDigis.cfi"
    
    # ZeroSuppressor
    include "RecoLocalTracker/SiStripZeroSuppression/data/SiStripZeroSuppression.cfi"

# SiStripClusterizer
    include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer_RealData.cfi"
    replace siStripClusters.ChannelThreshold    = 3.0
    replace siStripClusters.SeedThreshold       = 4.0
    replace siStripClusters.ClusterThreshold    = 7.0
    
    module siStripClusters325 =  siStripClusters from "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer_RealData.cfi"
    replace siStripClusters325.ChannelThreshold    = 2.0
    replace siStripClusters325.SeedThreshold       = 3.0
    replace siStripClusters325.ClusterThreshold    = 5.0
        
    # SiStripClusterInfoProducer
//    include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterInfoProducer.cfi"
// For 1_3_0_pre3
      include "AnalysisAlgos/SiStripClusterInfoProducer/data/SiStripClusterInfoProducer.cfi"
//    module siStripClusterInfoProducer325 = siStripClusterInfoProducer from "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterInfoProducer.cfi"
// For 1_3_0_pre3
    module siStripClusterInfoProducer325 = siStripClusterInfoProducer from "AnalysisAlgos/SiStripClusterInfoProducer/data/SiStripClusterInfoProducer.cfi"
    replace siStripClusterInfoProducer325.ClusterProducer = "siStripClusters325"

###Rechits
  include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
  include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"
  include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"
  # pixelCPE
  include "RecoLocalTracker/SiPixelRecHits/data/PixelCPEParmError.cfi"

###Tracking
  #TransientTrackingBuilder
  include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilder.cfi"

#### COSMIC TRACK FINDER
# Seed generation
  module cosmicseedfinder   = CosmicSeedGenerator{
    InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
    InputTag rphirecHits    = siStripMatchedRecHits:rphiRecHit
    InputTag stereorecHits  = siStripMatchedRecHits:stereoRecHit
    double ptMin            = 0.9
    double originRadius     = 150
    double originHalfLength = 90
    double originZPosition  = 0
    string TTRHBuilder      = "WithTrackAngle"	
    untracked string GeometricStructure = "TIBD+"
    #### untracked string GeometricStructure = "STANDARD"
  }

# Track reconstruction, using cosmictrackfinder
  module cosmictrackfinder= CosmicTrackFinder{
    bool TrajInEvents=true
    InputTag cosmicSeeds    = cosmicseedfinder:
    InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
    InputTag rphirecHits    = siStripMatchedRecHits:rphiRecHit
    InputTag stereorecHits  = siStripMatchedRecHits:stereoRecHit
    string HitProducer      = "siStripRecHits"
    int32 MinHits           = 3
    double Chi2Cut          = 100.
    string TTRHBuilder      = "WithTrackAngle"
    untracked string GeometricStructure  = "MTCC"
  }

#### COMBINATORIAL TRACK FINDER FOR COSMICS
  #seeding
  include "RecoTracker/SpecialSeedGenerators/data/CombinatorialSeedGeneratorForCosmics.cfi"
  #/other options: CkfTIBD+ (set to CkfTIBD+ to run on slice test data or CkfTOB for TOB slice test)
  replace combinatorialcosmicseedfinder.GeometricStructure = CkfTIBD+
    
    #track candidates
    include "RecoTracker/CkfPattern/data/CkfTrackCandidates.cff"
    replace MeasurementTrackerESProducer.pixelClusterProducer = ""
    replace ckfTrackCandidates.TrajectoryBuilder    = "GroupedCkfTrajectoryBuilder"
    replace ckfTrackCandidates.SeedProducer         = "combinatorialcosmicseedfinder"
    replace GroupedCkfTrajectoryBuilder.ptCut               = 0.01
    replace GroupedCkfTrajectoryBuilder.maxLostHit          = 3
    replace GroupedCkfTrajectoryBuilder.maxConsecLostHit    = 1
    replace GroupedCkfTrajectoryBuilder.minimumNumberOfHits = 3
    #final fit
    include "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterial.cff"
    replace ctfWithMaterialTracks.TrajectoryInEvent = true
    #track info
    include "AnalysisAlgos/TrackInfoProducer/data/TrackInfoProducer.cfi"	
    

###Analyzer
  include "AnalysisExamples/SiStripDetectorPerformance/data/TIFNtupleMaker.cfi"
  replace modTIFNtupleMaker.TracksLabel = "ctfWithMaterialTracks"
  replace modTIFNtupleMaker.TrackInfoLabel = trackinfo:updatedState
  replace modTIFNtupleMaker.SeedsLabel  = "combinatorialcosmicseedfinder"
  replace modTIFNtupleMaker.fileName = "TIF_Cosmic_Run540_ZS_4.root"
  replace modTIFNtupleMaker.TID_ON = false
  replace modTIFNtupleMaker.TOB_ON = false	
  replace modTIFNtupleMaker.TEC_ON = false	

//for Cosmic trackfinder
//  replace modMTCCNtupleMaker.TracksLabel = "cosmictrackfinder"
//  replace modMTCCNtupleMaker.SeedsLabel  = "cosmicseedfinder"
//  replace modMTCCNtupleMaker.fileName = "TIF_Cosmic_Run540_ZS.root"

###

  module out = PoolOutputModule {
    untracked string fileName = 'FullEvent_Run540_ZS_4.root'
//    untracked vstring outputCommands = {
//      "drop *",
//      "keep *_*_*_TIFAnalyzer"
//    }
  }



 path p  = { 
       	siStripClusters325, siStripClusters, siStripClusterInfoProducer, siStripClusterInfoProducer325 
	,siStripMatchedRecHits
	,combinatorialcosmicseedfinder, ckfTrackCandidates, ctfWithMaterialTracks
	,trackinfo
	}

// endpath end = {out}
 endpath end = {modTIFNtupleMaker, out}
}


